#Docker 를 최신버전으로 사용
version: '3'

services:
  #WEB 이라는 서비스 하나만 실행
  web:
    #현재 폴더를 Build 앞에서 만든 DOCKERFILE 이 현재 폴더의 있음으로 이 파일을 이용해 컨테이너 이미지를 만듭니다
    build: .
    #Commnad로 터미널에서 직접 입력했던 서버 실행 명령을 대신 입력합니다
    command: bash -c "python manage.py runserver 0.0.0.0:8000 && gunicorn Personal_Blog_prj.wsgi:application --bind 0.0.0.0:8000"
    #Volumes로 로컬 컴퓨터의 폴더와 도커의 폴더를 연결합니다. 여기서는 현재 폴더를 /usr/src/app 폴더와 연결합니다
    volumes:
      - ./:/usr/src/app/
    #8000 번 포트 사용
    ports:
      - 8000:8000
    env_file:
      - ./.env.dev
    #Web container는 db 컨테이너가 실행된 이후에 시작해야 한다는 의미로 depends_on을 db로 설정합니다
    depends_on:
      - db
  db:
    #db라는 이름의 컨테이너는 postgres를 실행하기 위해 만든 것입니다. 이미지는 도커에서 공식으로 제공하는 postgres:12.0-alpine 사용
    image: postgres:12.0-alpine
    #volumes를 설정해서 컨테이너 실행이 중단되더라도 데이터베이스의 내용이 사라지지 않도록 합니다
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=do_it_django_db_user
      - POSTGRES_PASSWORD=do_it_django_db_password
      - POSTGRES_DB=do_it_django_dev
volumes:
    postgres_data: